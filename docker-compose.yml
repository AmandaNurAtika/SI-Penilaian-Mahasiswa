version: '3.8'  # Versi file docker-compose

services:
  # Menjalankan aplikasi backend dalam container PHP
  app:
    build:
      context: ./backend                  # Folder sumber build Dockerfile
      dockerfile: ../Dockerfile           
    image: sinilai-backend                # Nama image Docker
    container_name: sinilai-app           # Nama container
    restart: unless-stopped              
    working_dir: /var/www                 
    volumes:
      - ./backend:/var/www               
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini  # Konfigurasi tambahan PHP
    networks:
      - sinilai-network                   # Menghubungkan ke jaringan khusus

  # Menyediakan server untuk aplikasi backend
  webserver:
    image: nginx:alpine                   
    container_name: sinilai-nginx         
    restart: unless-stopped
    ports:
      - "8080:80"                       
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/conf.d/backend.conf:/etc/nginx/conf.d/default.conf  #Menggunakan config Nginx dari folder
    networks:
      - sinilai-network

  # Untuk app frontend Laravel 
  frontend-app:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile
    image: sinilai-frontend
    container_name: sinilai-fe-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./frontend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini      
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf       
    networks:
      - sinilai-network

  frontend-web:
    # Frontend Nginx
    image: nginx:alpine
    container_name: sinilai-fe-nginx
    restart: unless-stopped
    ports:
      - "8082:80"     # Akses frontend Nginx di port 8082 (host):80 (container)
    volumes:
      - ./frontend:/var/www
      - ./docker/nginx/conf.d/frontend.conf:/etc/nginx/conf.d/default.conf
    networks:
      - sinilai-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: sinilai-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: sinilai2
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"  # Memungkinkan password kosong
    ports:
      - "3307:3306"                      # Port host 3307 untuk menghindari bentrok dengan MySQL lokal
    volumes:
      - dbdata:/var/lib/mysql            # Menyimpan data database
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf  # Konfigurasi khusus MySQL
    networks:
      - sinilai-network

  #phpMyAdmin (UI untuk database)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: sinilai-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db                        
      PMA_PORT: 3306
    ports:
      - "8081:80"                        
    networks:
      - sinilai-network

# Jaringan khusus agar semua container saling terhubung
networks:
  sinilai-network:
    driver: bridge

# Volume untuk menyimpan data database agar tidak hilang saat container direstart
volumes:
  dbdata:
    driver: local
